#!/bin/env bash

# if argv is empty do nothing
if [[ -z $1 ]]; then
  exit 1
fi

# start tmux session if not exits

tmux_session_path="/tmp/tmux-$(whoami)-$1"
nvim_session_path="/tmp/nvim-$(whoami)-$1"

# if nvim session not exists create it
# if second arg is not empty, send rest of args to nvim
# else attach to nvim session via tmux

# checking nvim_session_path if not exists create it
# one of them not exists create both
if [[ ! -S "$tmux_session_path" ]]; then
  tmux -S "$tmux_session_path" new-session -d "nvim --listen $nvim_session_path"
fi

if [[ ! -S "$nvim_session_path" ]]; then
  tmux -S "$tmux_session_path" new-session -d "nvim --listen $nvim_session_path"
fi

# if [[ ! -S "$nvim_session_path" || ! -S "$tmux_session_path"  ]]; then
#     tmux -S "$tmux_session_path" new-session -d -t "nvim --server $nvim_session_path"
# fi

# if $2 is one of _attach, _kill, _detach do it

if [[ $2 == "_new" || $2 == "_attach" || $2 == "_kill" || $2 == "_detach" ]]; then
  case $2 in
  "_new")
    tmux -S "$tmux_session_path" new-session -A -d "nvim --listen $nvim_session_path"
    ;;
  "_attach")
    tmux -S "$tmux_session_path" attach
    ;;
  "_kill")
    tmux -S "$tmux_session_path" kill-session
    ;;
  "_detach")
    tmux -S "$tmux_session_path" detach
    ;;
  esac
  exit 0 # block further execution
fi

if [[ -n $2 ]]; then
  cursor=$3
  if [[ -z $3 ]]; then
    cursor="1,1"
  fi
  tmux -S "$tmux_session_path" display-message -p "opening $2:$3 in nvim" >/dev/null
  nvim --server "$nvim_session_path" --remote "$2" &>/dev/null
  nvim --server "$nvim_session_path" --remote-expr "cursor($cursor)" &>/dev/null
fi
